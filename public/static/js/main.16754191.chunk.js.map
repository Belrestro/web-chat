{"version":3,"sources":["config.js","helpers/auth-header.js","actions/user.js","reducers/user.js","actions/chats.js","reducers/chats.js","reducers/contacts.js","actions/contacts.js","reducers/index.js","components/login/index.js","components/sidebar/index.js","components/chat/index.js","components/header/index.js","helpers/ws-listener.js","App.js","index.js"],"names":["window","location","protocol","hostname","port","apiEndpoint","wsEndpoint","getAuthToken","localStorage","getItem","getAuthHeader","token","Authorization","setUserToken","setItem","type","DEFAULT_STATE","user","initialized","isProcessing","setActiveChat","chat","chats","activeChat","state","action","messages","invitationList","message","updated","id","map","Object","assign","chatId","newActiveChat","filter","userContacts","availableContacts","contacts","userId","userIds","appReducer","combineReducers","connect","dispatch","signIn","login","password","getState","axios","post","JSON","stringify","mode","headers","then","res","data","finally","loginUser","signUp","_","registerUser","useState","currentTab","changeTab","changeLogin","changePassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","cleanupMessages","handleInput","fn","e","target","value","className","onSubmit","preventDefault","placeholder","disabled","onChange","onClick","bind","catch","err","response","status","console","log","chatState","contactsState","userState","markChatInitialized","setChatList","requestOptions","get","selectChat","inviteToChat","participantIds","name","payload","startChat","markContactsInitialized","requestAvailableContacts","requestContactList","addToContacts","addContactsToList","addUserToContacts","deleteFromContacts","delete","removeContactsFromList","deleteUserFromContacts","deleteChat","removeChatFromList","removeChat","chatList","searchValue","setSearchValue","setTab","filtered","setFiltered","tabIndex","personal","find","length","includes","hasActiveChat","list","item","toLowerCase","indexOf","aria-hidden","key","contact","sendMessage","text","sendMessageToChat","setMessages","requestChatMessages","initializeChat","inviteUserToChat","updateChat","updateChatInList","getChatById","newMessage","setNewMessage","invitePaneVisible","setInvitePaneVisible","paneSearchValue","setPaneSearchValue","trySend","trim","ref","React","createRef","setTimeout","current","scroll","scrollY","innerHeight","toggleInvitePane","userInviteList","participatingAlready","isInUserContacts","toLocaleLowerCase","push","senderId","onKeyPress","event","NOTIFICATION_TYPES","setUserProfile","WebSocket","onmessage","parsed","parse","addMessageToActiveChat","listenWsUpdates","store","createStore","applyMiddleware","thunk","withExtraArgument","createLogger","render","document","getElementById"],"mappings":"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","file":"static/js/main.16754191.chunk.js","sourcesContent":["\nconst { protocol, hostname, port } = window.location;\nexport const apiEndpoint = `${protocol}//${hostname}:${port}/api`;\nexport const wsEndpoint = `wss://${hostname}:${port}`;\n\n// export const apiEndpoint = `${protocol}//${hostname}:${3202}/api`;\n// export const wsEndpoint = `ws://${hostname}:${3202}`;\nexport const USER_TOKEN_PROP = 'user_token';","import { USER_TOKEN_PROP } from '../config';\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(USER_TOKEN_PROP);\n}\n\nexport const getAuthHeader = () => {\n  const token = getAuthToken()\n\n  if (!token) return {};\n\n  return {\n    Authorization: `Bearer ${token}`\n  };\n}","import axios from 'axios';\nimport { USER_TOKEN_PROP } from '../config';\nimport { getAuthHeader } from '../helpers/auth-header'\n\nexport const USER_PROCESSING_STARTED = 'USER_PROCESSING_STARTED';\nconst startUserProcessing = () => ({ type: USER_PROCESSING_STARTED });\n\nexport const USER_PROCESSING_FINISHED = 'USER_PROCESSING_FINISHED';\nconst finishUserProcessing = () => ({ type: USER_PROCESSING_FINISHED });\n\nexport const USER_INITIALIZED = 'USER_INITIALIZED';\nexport const initializeUser = () => {\n  return ({ type: USER_INITIALIZED })\n}\n\nexport const SET_USER_TOKEN = 'SET_USER_TOKEN'\nexport const setUserToken = (token) => {\n  localStorage.setItem(USER_TOKEN_PROP, token);\n  return {\n    type: SET_USER_TOKEN,\n    token,\n  };\n}\n\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE';\nexport const setUserProfile = (user) => ({\n  type: SET_USER_PROFILE,\n  user,\n})\n\nexport const registerUser = (login, password) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startUserProcessing());\n    const requestOptions = {\n      mode: 'no-cors',\n      headers: {\n        'content-type': 'application/json'\n      },\n    };\n    return axios.post(`${apiEndpoint}/users/register`, JSON.stringify({ login, password }), requestOptions)\n    .then(res => {\n      const token = res.data;\n      dispatch(setUserToken(token));\n    })\n    .finally(() => dispatch(finishUserProcessing()))\n  };\n};\n\nexport const loginUser = (login, password) => {\n  return (dispatch, getState, apiEndpoint) => {\n    dispatch(startUserProcessing());\n    const requestOptions = {\n      mode: 'no-cors',\n      headers: {\n        'content-type': 'application/json'\n      },\n    };\n\n    return axios.post(`${apiEndpoint}/users/login`, JSON.stringify({ login, password }), requestOptions)\n      .then(res => {\n        const token = res.data;\n        window.localStorage.setItem('user_token', token);\n        dispatch(setUserToken(token));\n      })\n      .finally(() => dispatch(finishUserProcessing()))\n  };\n};\n\nexport const getUserProfile = () => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startUserProcessing());\n\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n\n    return axios.get(`${apiEndpoint}/users/profile`, requestOptions)\n      .then(res => res.data)\n      .then(user => dispatch(setUserProfile(user)))\n      .finally(() => dispatch(finishUserProcessing()))\n  };\n};","import {\n  SET_USER_TOKEN,\n  SET_USER_PROFILE,\n  USER_PROCESSING_STARTED,\n  USER_PROCESSING_FINISHED,\n  USER_INITIALIZED,\n} from '../actions/user';\nimport { USER_TOKEN_PROP } from '../config';\n\nconst DEFAULT_STATE = {\n  user: null,\n  token: localStorage.getItem(USER_TOKEN_PROP),\n  initialized: false,\n  isProcessing: false,\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case USER_PROCESSING_STARTED:\n      return {\n        ...state,\n        isProcessing: true,\n      };\n    case USER_PROCESSING_FINISHED:\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    case USER_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      }\n    case SET_USER_TOKEN:\n      const { token } = action;\n      return {\n        ...state,\n        token,\n      };\n    case SET_USER_PROFILE:\n      const { user } = action;\n      return {\n        ...state,\n        user,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport { getAuthHeader } from '../helpers/auth-header';\n\nexport const CHAT_PROCESSING_STARTED = 'CHAT_PROCESSING_STARTED';\nconst startChatProcessing = () => ({ type: CHAT_PROCESSING_STARTED });\n\nexport const CHAT_PROCESSING_FINISHED = 'CHAT_PROCESSING_FINISHED';\nconst finishChatProcessing = () => ({ type: CHAT_PROCESSING_FINISHED });\n\nexport const SET_CHAT_LIST = 'SET_CHAT_LIST';\nexport const setChatList = (chats) => ({\n  type: SET_CHAT_LIST,\n  chats,  \n});\n\nexport const CHAT_INITIALIZED = 'CHAT_INITIALIZED';\nexport const initializeChat = () => ({ type: CHAT_INITIALIZED });\n\nexport const ADD_CHAT_TO_LIST = 'ADD_CHAT_TO_LIST';\nexport const addChatToList = (chat) => ({\n  type: ADD_CHAT_TO_LIST,\n  chat,\n})\nexport const REMOVE_CHAT_FROM_LIST = 'REMOVE_CHAT_FROM_LIST';\nexport const removeChatFromList = (chatId) => ({\n  type: REMOVE_CHAT_FROM_LIST,\n  chatId,\n});\nexport const UPDATE_CHAT_IN_LIST = 'UPDATE_CHAT_IN_LIST';\nexport const updateChatInList = (chat) => ({\n  type: UPDATE_CHAT_IN_LIST,\n  chat,\n});\n\nexport const requestChatList = () => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/chats`, requestOptions)\n      .then(res => {\n        dispatch(setChatList(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n};\n\nexport const startChat = (participantIds, name) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: {\n        ...getAuthHeader(),\n        'content-type': 'application/json',\n      },\n    };\n\n    const payload = JSON.stringify({ participantIds, name });\n\n    return axios.post(`${apiEndpoint}/chats`, payload, requestOptions)\n      .then(res => {\n        dispatch(setActiveChat(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n}\n\nexport const inviteToChat = (chatId, userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: {\n        ...getAuthHeader(),\n        'content-type': 'application/json',\n      },\n    };\n\n    const payload = JSON.stringify({ userId });\n\n    return axios.post(`${apiEndpoint}/chats/${chatId}/invite`, payload, requestOptions)\n      .then(res => res.data)\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n}\n\nexport const removeChat = (chatId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n\n    return axios.delete(`${apiEndpoint}/chats/${chatId}`, requestOptions)\n      .then(res => {\n        dispatch(removeChatFromList(chatId));\n        return res.data;\n      })\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n}\n\nexport const getChatById = (chatId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n\n    return axios.get(`${apiEndpoint}/chats/${chatId}`, requestOptions)\n      .then(res => {\n        const chat = res.data;\n        dispatch(updateChatInList(chat))\n\n        return chat;\n      })\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n}\n\nexport const SET_ACTIVE_CHAT = 'SET_ACTIVE_CHAT';\nexport const setActiveChat = (chat) => ({\n  type: SET_ACTIVE_CHAT,\n  chat,\n})\n\nexport const ACTIVE_CHAT_INITIALIZED = 'ACTIVE_CHAT_INITIALIZED';\nexport const initializeActiveChat = () => ({ type: ACTIVE_CHAT_INITIALIZED });\n\nexport const SET_ACTIVE_CHAT_MESSAGES = 'SET_ACTIVE_CHAT_MESSAGES';\nexport const setActiveChatMessage = (messages) => ({ type: SET_ACTIVE_CHAT_MESSAGES, messages });\n\nexport const ADD_MESSAGE_TO_ACTIVE_CHAT = 'ADD_MESSAGE_TO_ACTIVE_CHAT';\nexport const addMessageToActiveChat = (message) => ({ type: ADD_MESSAGE_TO_ACTIVE_CHAT, message });\n\nexport const requestChatMessages = (chatId) => {\n  return (dispatch, _, apiEndpoint) => {\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/chats/${chatId}/messages`, requestOptions)\n      .then(res => {\n        dispatch(setActiveChatMessage(res.data));\n\n        return res.data;\n      });\n  }\n};\n\nexport const sendMessageToChat = (chatId, text) => {\n  return (dispatch, _, apiEndpoint) => {\n    const requestOptions = {\n      headers: {\n        ...getAuthHeader(),\n        'content-type': 'application/json',\n      },\n    };\n    const payload = JSON.stringify({ text });\n    return axios.post(`${apiEndpoint}/chats/${chatId}/messages`, payload, requestOptions);\n  }\n};\n","import {\n  SET_CHAT_LIST,\n  ADD_CHAT_TO_LIST,\n  CHAT_INITIALIZED,\n  SET_ACTIVE_CHAT,\n  CHAT_PROCESSING_STARTED,\n  CHAT_PROCESSING_FINISHED,\n  ACTIVE_CHAT_INITIALIZED,\n  SET_ACTIVE_CHAT_MESSAGES,\n  ADD_MESSAGE_TO_ACTIVE_CHAT,\n  REMOVE_CHAT_FROM_LIST,\n  UPDATE_CHAT_IN_LIST,\n} from '../actions/chats'\n\nconst DEFAULT_STATE = {\n  chats: [],\n  activeChat: null,\n  initialized: false,\n  isProcessing: false,\n};\n\nconst chat = (state = DEFAULT_STATE , action) => {\n  switch (action.type) {\n    case CHAT_PROCESSING_STARTED:\n      return {\n        ...state,\n        isProcessing: true,\n      };\n    case CHAT_PROCESSING_FINISHED:\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    case CHAT_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      };\n    case ACTIVE_CHAT_INITIALIZED:\n      return {\n        ...state,\n        activeChat: {\n          ...state.activeChat,\n          initialized: true,\n        }\n      }\n    case SET_CHAT_LIST:\n      return {\n        ...state,\n        chats: action.chats,\n      }\n    case ADD_CHAT_TO_LIST:\n      const { chat } = action;\n      return {\n        ...state,\n        chats: [ ...state.chats, chat ]\n      }\n    case SET_ACTIVE_CHAT:\n      return {\n        ...state,\n        activeChat: {\n          ...action.chat,\n          messages: [],\n          invitationList: [],\n        }\n      }\n    case SET_ACTIVE_CHAT_MESSAGES:\n      return {\n        ...state,\n        activeChat: {\n          ...state.activeChat,\n          messages: [...action.messages],\n        }\n      }\n    case ADD_MESSAGE_TO_ACTIVE_CHAT:\n      return {\n        ...state,\n        activeChat: {\n          ...state.activeChat,\n          messages: [...state.activeChat.messages, action.message],\n        }\n      }\n    case UPDATE_CHAT_IN_LIST:\n      const updated = action.chat;\n      const activeChat = state.activeChat\n        && state.activeChat.id === updated.id\n          ? { ...state.activeChat, ...updated }\n          : state.activeChat;\n      return {\n        ...state,\n        chats: state.chats.map(chat => {\n          if (chat.id === updated.id) {\n            Object.assign(chat, updated)\n          }\n          return chat;\n        }),\n        activeChat,\n      }\n    case REMOVE_CHAT_FROM_LIST:\n      const { chatId } = action;\n      const newActiveChat = state.activeChat\n        && state.activeChat.id === chatId\n          ? null\n          : state.activeChat;\n      return {\n        ...state,\n        chats: state.chats.filter(chat => {\n          return chat.id !== chatId;\n        }),\n        activeChat: newActiveChat,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default chat;","import {\n  ADD_CONTACT_TO_LIST,\n  REMOVE_CONTACTS_FROM_LIST,\n  ADD_USER_TO_AVAILABLE,\n  CONTACTS_INITIALIZED,\n  CONTACTS_PROCESSING_FINISHED,\n  CONTACTS_PROCESSING_STARTED,\n  SET_ALL_AVAILABLE_CONTACTS,\n  SET_CONTACTS_LIST\n} from '../../src/actions/contacts';\n\nconst DEFAULT_STATE = {\n  initialized: false,\n  isProcessing: false,\n  userContacts: [],\n  availableContacts: [],\n}\n\nconst contacts = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case CONTACTS_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      }\n    case CONTACTS_PROCESSING_STARTED:\n      return {\n        ...state,\n        isProcessing: true,\n      }\n    case CONTACTS_PROCESSING_FINISHED:\n      return {\n        ...state,\n        isProcessing: false,\n      }\n    case ADD_CONTACT_TO_LIST:\n      return {\n        ...state,\n        userContacts: [\n          ...state.userContacts,\n          action.userId,\n        ]\n      }\n    case REMOVE_CONTACTS_FROM_LIST:\n      const userContacts = state\n        .userContacts\n        .filter(userId => userId !== action.userId);\n      return {\n        ...state,\n        userContacts,\n      }\n    case ADD_USER_TO_AVAILABLE:\n      return {\n        ...state,\n        availableContacts: [\n          ...state.availableContacts,\n          action.user,\n        ]\n      }\n    case SET_ALL_AVAILABLE_CONTACTS:\n      return {\n        ...state,\n        availableContacts: [\n          ...action.contacts,\n        ]\n      }\n    case SET_CONTACTS_LIST:\n      return {\n        ...state,\n        userContacts: [\n          ...action.userIds\n        ]\n      }\n    default:\n      return state;\n  }\n}\n\nexport default contacts;","import axios from 'axios';\nimport { getAuthHeader } from '../helpers/auth-header';\n\nexport const CONTACTS_PROCESSING_STARTED = 'CONTACTS_PROCESSING_STARTED';\nconst startContactsProcessing = () => ({ type: CONTACTS_PROCESSING_STARTED });\n\nexport const CONTACTS_PROCESSING_FINISHED = 'CONTACTS_PROCESSING_FINISHED';\nconst finishContactsProcessing = () => ({ type: CONTACTS_PROCESSING_FINISHED });\n\nexport const SET_CONTACTS_LIST = 'SET_CONTACTS_LIST';\nexport const setContactsList = (userIds) => ({\n  type: SET_CONTACTS_LIST,\n  userIds,  \n});\n\nexport const SET_ALL_AVAILABLE_CONTACTS = 'SET_CONTACTSET_ALL_AVAILABLE_CONTACTSS_LIST';\nexport const setAllContacts = (contacts) => ({\n  type: SET_ALL_AVAILABLE_CONTACTS,\n  contacts,  \n});\n\nexport const CONTACTS_INITIALIZED = 'CONTACTS_INITIALIZED';\nexport const initializeContacts = () => ({ type: CONTACTS_INITIALIZED });\n\nexport const ADD_CONTACT_TO_LIST = 'ADD_CONTACT_TO_LIST';\nexport const addContactsToList = (userId) => ({\n  type: ADD_CONTACT_TO_LIST,\n  userId,\n})\n\nexport const REMOVE_CONTACTS_FROM_LIST = 'REMOVE_CONTACTS_FROM_LIST';\nexport const removeContactsFromList = (userId) => ({\n  type: REMOVE_CONTACTS_FROM_LIST,\n  userId,\n})\n\nexport const ADD_USER_TO_AVAILABLE = 'ADD_USER_TO_AVAILABLE';\nexport const addUserToAvailable = (user) => ({\n  type: ADD_USER_TO_AVAILABLE,\n  user,\n})\n\nexport const requestUserContactList = (userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/contacts`, requestOptions)\n      .then(res => {\n        dispatch(setContactsList(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n};\n\nexport const requestAllContacts = () => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/contacts/all`, requestOptions)\n      .then(res => {\n        dispatch(setAllContacts(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n}\n\nexport const addUserToContacts = (userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.post(`${apiEndpoint}/contacts/${userId}`, '', requestOptions)\n      .then(res => {\n        dispatch(addContactsToList(userId));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n}\n\nexport const deleteUserFromContacts = (userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.delete(`${apiEndpoint}/contacts/${userId}`, requestOptions)\n      .then(res => {\n        dispatch(removeContactsFromList(userId));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n}","import { combineReducers } from 'redux';\nimport user from './user'\nimport chats from './chats'\nimport contacts from './contacts'\n\nexport const appReducer = combineReducers({\n  user,\n  chats,\n  contacts,\n})","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './index.css'\n\nimport { loginUser, registerUser } from '../../actions/user'\n\nconst Login = ({ user, signIn, signUp }) => {\n  const [currentTab, changeTab] = useState(1);\n  const [login, changeLogin] = useState('');\n  const [password, changePassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const cleanup = () => {\n    changeLogin('');\n    changePassword('');\n  };\n  const cleanupMessages = () => {\n    setErrorMessage('')\n    setSuccessMessage('')\n  };\n  const signUpUser = () => {\n    cleanupMessages();\n    signUp(login, password)\n      .then(() => {\n        cleanup();\n        changeTab(0);\n        setSuccessMessage('User created, now you can sign in');\n      })\n      .catch(err => {\n        console.log(err.response)\n        if (err.response && err.response.status === 409) {\n          setErrorMessage('User with this name already exists')\n        } else {\n          setErrorMessage('server error');\n        }\n      })\n  };\n\n  const signInUser = () => {\n    cleanupMessages()\n    signIn(login, password)\n      .catch((err) => {\n        if (err.response && err.response.status < 500) {\n          setErrorMessage('Invalid login or password')\n        } else {\n          setErrorMessage('server error');\n        }\n      })\n  }\n  const handleInput = (fn) => (e) => fn(e.target.value);\n\n  return (<div className=\"auth-form-container\">\n    <h3>Web chat application</h3>\n\n    <form className=\"auth-form\" onSubmit={(e) => e.preventDefault()}>\n      <input type=\"text\" placeholder=\"login\"\n        value={login}\n        disabled={user.isProcessing}\n        onChange={handleInput(changeLogin)}/>\n      <input type=\"password\" placeholder=\"password\"\n        value={password}\n        disabled={user.isProcessing}\n        onChange={handleInput(changePassword)}/>\n      <div className=\"auth-form-success\">{successMessage}</div>\n      <div className=\"auth-form-error\">{errorMessage}</div>\n      <div className=\"auth-form-declaimer\">    \n          {\n            currentTab === 0\n              ? <p>Sign in to continue, don't have account <b onClick={changeTab.bind(null, 1)}>sign up</b></p>\n              : <p>Already registered, use your account <b onClick={changeTab.bind(null, 0)}>sign in</b></p>\n          }\n      </div>\n      {\n        currentTab === 0\n          ? <button disabled={user.isProcessing || !login || !password} onClick={signInUser}>Sign in</button>\n          : <button disabled={user.isProcessing || !login || !password} onClick={signUpUser}>Sign up</button>\n      }\n    </form>\n  </div>)\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (login, password) => dispatch(loginUser(login, password)),\n    signUp: (login, password) => dispatch(registerUser(login, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { initializeChat, setActiveChat, requestChatList, startChat } from '../../actions/chats';\nimport {\n  initializeContacts,\n  requestAllContacts,\n  requestUserContactList,\n  addUserToContacts,\n  deleteUserFromContacts,\n} from '../../actions/contacts';\nimport { removeChat } from '../../actions/chats';\nimport './index.css';\n\nconst Sidebar = ({\n  chatState,\n  contactsState,\n  userState,\n  markChatInitialized,\n  setChatList,\n  selectChat,\n  markContactsInitialized,\n  requestAvailableContacts,\n  requestContactList,\n  addToContacts,\n  deleteFromContacts,\n  inviteToChat,\n  deleteChat,\n}) => {\n  const { chats: chatList } = chatState;\n  const { availableContacts, userContacts } = contactsState;\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ currentTab, setTab] = useState(0);\n  const [ filtered, setFiltered ] = useState([]);\n  if (!chatState.initialized && !chatState.isProcessing) {\n    markChatInitialized();\n    setChatList();\n  }\n  if (!contactsState.initialized && !contactsState.isProcessing) {\n    markContactsInitialized();\n    requestAvailableContacts();\n    requestContactList();\n  }\n  const filterList = (e) => {\n    const list = currentTab === 0 ? chatList : availableContacts;\n    const { value } = e.target;\n    setFiltered(list.filter(item => {\n      const prop = currentTab === 0 ? item.name : item.login;\n      return prop.toLowerCase().indexOf(value.toLowerCase()) > -1;\n    }))\n    setSearchValue(value);\n  }\n  const changeTab = (tabIndex) => {\n    setTab(tabIndex);\n    setSearchValue('');\n    setFiltered([]);\n  };\n\n  const hasActiveChat = (userId) => {\n    const personalChat = chatList.find(chat => {\n      return chat.participantIds.length === 2\n        && chat.participantIds.includes(userId);\n    });\n\n    return personalChat;\n  };\n\n  const startChat = (userId) => {\n    const personal = hasActiveChat(userId);\n\n    if (personal) {\n      changeTab(0)\n      selectChat(personal);\n      return;\n    }\n    inviteToChat([userId, userState.user.id])\n      .then((chat) => {\n        changeTab(0)\n        selectChat(chat)\n      })\n  }\n\n  const chats = searchValue ? filtered : chatList;\n  const contacts = searchValue\n    ? filtered\n    : userContacts.map(id => {\n      return availableContacts.find(user => user.id === id);\n    });\n\n  return (<aside className={`chat-sidebar\n      ${(chatState.isProcessing || contactsState.isProcessing) ? 'disabled': ''}\n    `}>\n    <input className=\"chat-sidebar-filter\"\n      placeholder=\"Search\"\n      value={searchValue}\n      onChange={filterList} />\n    <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n    <div className=\"switches\">\n      <button onClick={() => changeTab(0)} className={`${currentTab === 0 && 'active'}` } >Chats</button>\n      <button onClick={() => changeTab(1)} className={`${currentTab === 1 && 'active'}` }>Contacts</button>\n    </div>\n    {\n      currentTab === 0\n        ? <div className=\"chat-list\">\n          {chats.map((chat) => {\n            return <div onClick={() => selectChat(chat)} className=\"chat-item\" key={chat.id}>\n              {chat.name}\n              <i className=\"fa fa-trash-o\" aria-hidden=\"true\"\n                onClick={() => deleteChat(chat.id)}></i>\n            </div>\n          })}\n        </div>\n        : <div className=\"chat-list\">\n          {contacts.map(contact => {\n            return <div className=\"chat-item\" key={contact.id}>\n              {contact.login}\n              { \n                searchValue\n                  ? userContacts.includes(contact.id)\n                    ? (<span>\n                        <i className=\"fa fa-commenting\" aria-hidden=\"true\"\n                          onClick={() => startChat(contact.id)}></i>\n                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"\n                          onClick={() => deleteFromContacts(contact.id)}></i>\n                      </span>)\n                    : <i className=\"fa fa-plus\" aria-hidden=\"true\"\n                        onClick={() => addToContacts(contact.id)}></i>\n                  : (<span>\n                      <i className=\"fa fa-commenting\" aria-hidden=\"true\"\n                        onClick={() => startChat(contact.id)}></i>\n                      <i className=\"fa fa-trash-o\" aria-hidden=\"true\"\n                        onClick={() => deleteFromContacts(contact.id)}></i>\n                    </span>)\n                \n              }\n            </div>\n          })}\n        </div>\n    }\n  </aside>)\n};\n\nconst mapStateToProps = (state) => ({\n  chatState: state.chats,\n  contactsState: state.contacts,\n  userState: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    markChatInitialized: () => dispatch(initializeChat()),\n    setChatList: () => dispatch(requestChatList()),\n    selectChat: (chat) => dispatch(setActiveChat(chat)),\n    inviteToChat: (participantIds, name) => dispatch(startChat(participantIds, name)),\n    markContactsInitialized: () => dispatch(initializeContacts()),\n    requestAvailableContacts: () => dispatch(requestAllContacts()),\n    requestContactList: () => dispatch(requestUserContactList()),\n    addToContacts: (userId) => dispatch(addUserToContacts(userId)),\n    deleteFromContacts: (userId) => dispatch(deleteUserFromContacts(userId)),\n    deleteChat: (chatId) => dispatch(removeChat(chatId)),\n  }\n}; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  sendMessageToChat,\n  requestChatMessages,\n  initializeActiveChat,\n  inviteToChat,\n  getChatById,\n} from '../../actions/chats';\nimport './index.css';\n\nconst Chat = ({\n  chatState,\n  userState,\n  contactsState,\n  sendMessage,\n  setMessages,\n  initializeChat,\n  inviteUserToChat,\n  updateChat,\n}) => {\n  const { activeChat } = chatState;\n\n  if (activeChat && !activeChat.initialized) {\n    initializeChat()\n    setMessages(activeChat.id)\n  };\n\n  const [newMessage, setNewMessage] = useState('');\n  const [invitePaneVisible, setInvitePaneVisible] = useState(false);\n  const [paneSearchValue, setPaneSearchValue] = useState('');\n\n  const handleChange = fn => e => fn(e.target.value);\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") trySend();\n  }\n\n  const trySend = () => {\n    if (activeChat && newMessage.trim()) {\n      sendMessage(activeChat.id, newMessage)\n        .then(() => setNewMessage(''));\n    }\n  };\n\n  const inviteUser = (userId) => {\n    inviteUserToChat(activeChat.id, userId)\n      .then(() => {\n        activeChat.participantIds.push(userId);\n        setPaneSearchValue('')\n        toggleInvitePane();\n        updateChat(activeChat.id)\n      })\n  }\n\n  const ref = React.createRef();\n  setTimeout(() => {\n    if (ref.current) {\n      ref.current.scroll(0, window.scrollY + window.innerHeight);\n    }\n  }, 25);\n\n  const toggleInvitePane = () => {\n    if (invitePaneVisible) {\n      setPaneSearchValue('');\n    }\n\n    setInvitePaneVisible(!invitePaneVisible);\n  }\n\n  let userInviteList = []\n  if (activeChat) {\n    userInviteList = contactsState.availableContacts\n      .filter(user => {\n        const participatingAlready = activeChat.participantIds\n          && activeChat.participantIds.includes(user.id);\n        const isInUserContacts = contactsState.userContacts\n          .includes(user.id);\n\n        return !participatingAlready && isInUserContacts;\n      })\n      .filter(user => {\n        if (!paneSearchValue) return true;\n        return user.login.toLowerCase()\n          .indexOf(paneSearchValue.toLocaleLowerCase()) > -1;\n      });\n  }\n    \n\n  return (<main className={`active-chat ${chatState.isProcessing ? 'disabled' : ''}`}>\n    <div className=\"active-chat-header\">\n      <h3 className=\"name\">{activeChat && activeChat.name}</h3>\n      {\n        activeChat && <div className=\"pane\">\n          <i onClick={toggleInvitePane} className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          {\n            invitePaneVisible && <div className={`pane-list ${invitePaneVisible ? 'active' : ''}`}>\n              <input type=\"text\" placeholder=\"filter\"\n                value={paneSearchValue}\n                onChange={e => setPaneSearchValue(e.target.value)}/>\n              {\n                userInviteList.map(user => {\n                  return <div className=\"pane-item\"\n                    onClick={() => inviteUser(user.id)}>{user.login}</div>\n                })\n              }\n            </div>\n          }\n        </div>\n      }\n    </div>\n    <div className=\"active-chat-messages\" ref={ref}>\n      {activeChat \n        && activeChat.messages\n        && activeChat.messages.map(message => {\n          return <div key={message.id}\n            className={`message\n              ${message.senderId === userState.user.id ? 'righty' : 'lefty'}`}>\n            <div className=\"bubble\">{message.text}</div>\n          </div>\n        })}\n    </div>\n    <input className=\"send-message-input\" value={newMessage}\n      onChange={handleChange(setNewMessage)}\n      onKeyPress={handleKeyPress}/>\n    <i onClick={trySend} className=\"fa fa-paper-plane-o send-message-button\" aria-hidden=\"true\"></i>\n  </main>)\n};\n\nconst mapStateToProps = state => ({\n  chatState: state.chats,\n  userState: state.user,\n  contactsState: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendMessage: (chatId, text) => dispatch(sendMessageToChat(chatId, text)),\n  setMessages: (chatId) => dispatch(requestChatMessages(chatId)),\n  initializeChat: () => dispatch(initializeActiveChat()),\n  inviteUserToChat: (chatId, userId) => dispatch(inviteToChat(chatId, userId)),\n  updateChat: (chatId) => dispatch(getChatById(chatId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './index.css';\nimport { setUserToken } from '../../actions/user';\n\nconst Header = ({ dispatch, userState }) => {\n  const logOut = () => dispatch(setUserToken(''));\n  const { user } = userState;\n  return (<header className=\"user-status-header\">\n    <i className=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\n    {user && user.login}\n    <i className=\"fa fa-sign-out\" aria-hidden=\"true\" onClick={logOut}></i>\n  </header>)\n};\n\nconst mapStateToProps = state => ({\n  userState: state.user,\n})\n\nexport default connect(mapStateToProps)(Header);","import { wsEndpoint } from '../config';\nimport { addMessageToActiveChat } from '../actions/chats';\nimport { addUserToAvailable } from '../actions/contacts';\nimport { addChatToList } from '../actions/chats'\nimport { getAuthToken } from './auth-header';\n\nconst NOTIFICATION_TYPES = {\n  MESSAGE_CREATED: 'MESSAGE_CREATED',\n  CHAT_CREATED: 'CHAT_CREATED',\n  USER_CREATED: 'USER_CREATED',\n};\nexport const listenWsUpdates = (dispatch) => {\n  try {\n    const ws = new WebSocket(`${wsEndpoint}?token=${getAuthToken()}`);\n    ws.onmessage = (message) => {\n      const parsed = JSON.parse(message.data)\n      switch (parsed.type) {\n        case NOTIFICATION_TYPES.MESSAGE_CREATED:\n          return dispatch(addMessageToActiveChat(parsed.data));\n        case NOTIFICATION_TYPES.USER_CREATED:\n          return dispatch(addUserToAvailable(parsed.data));\n        case NOTIFICATION_TYPES.CHAT_CREATED:\n          return dispatch(addChatToList(parsed.data))\n        default:\n          return;\n      }\n    };\n  } catch (err) {\n    console.log('failed to connect over ws');\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport './App.css'; \nimport Login from './components/login';\nimport Sidebar from './components/sidebar';\nimport Chat from './components/chat';\nimport Header from './components/header';\nimport { listenWsUpdates } from './helpers/ws-listener'\nimport { getUserProfile, initializeUser } from './actions/user'\n\nconst App =  ({ dispatch, user }) => {\n  const loggedIn = !!user.token;\n  if (!loggedIn) {\n    return (<Login/>);\n  }\n\n  if (!user.initialized && !user.isProcessing) {\n    dispatch(initializeUser())\n    dispatch(getUserProfile()).catch(err => {})\n    listenWsUpdates(dispatch);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"component-container\">\n        <Sidebar/>\n        <Chat/>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { user } = state;\n\n  return { user };\n}\n\nexport default connect(mapStateToProps)(App)","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport { appReducer } from './reducers'\nimport thunk from 'redux-thunk'\nimport App from './App'\nimport { apiEndpoint } from './config'\n\nconst store = createStore(\n  appReducer,\n  applyMiddleware(\n    thunk.withExtraArgument(apiEndpoint),\n    createLogger()\n  )\n)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}