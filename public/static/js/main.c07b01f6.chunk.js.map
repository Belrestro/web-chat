{"version":3,"sources":["config.js","helpers/auth-header.js","actions/user.js","reducers/user.js","actions/chats.js","reducers/chats.js","reducers/contacts.js","actions/contacts.js","reducers/index.js","components/login/index.js","components/sidebar/index.js","components/chat/index.js","components/header/index.js","helpers/ws-listener.js","App.js","index.js"],"names":["window","location","protocol","hostname","port","apiEndpoint","wsEndpoint","getAuthToken","localStorage","getItem","getAuthHeader","token","Authorization","setUserToken","setItem","type","DEFAULT_STATE","user","initialized","isProcessing","setActiveChat","chat","chats","activeChat","state","action","messages","invitationList","message","userContacts","availableContacts","contacts","userId","filter","userIds","combineReducers","connect","dispatch","signIn","login","password","getState","axios","post","JSON","stringify","mode","headers","then","res","data","finally","loginUser","signUp","_","registerUser","useState","currentTab","changeTab","changeLogin","changePassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","cleanupMessages","handleInput","fn","e","target","value","className","onSubmit","preventDefault","disabled","onChange","onClick","bind","catch","err","response","status","console","log","chatState","contactsState","userState","markChatInitialized","setChatList","requestOptions","get","selectChat","inviteToChat","participantIds","name","payload","startChat","markContactsInitialized","requestAvailableContacts","requestContactList","addToContacts","addContactsToList","addUserToContacts","deleteFromContacts","delete","removeContactsFromList","deleteUserFromContacts","chatList","searchValue","setSearchValue","setTab","filtered","setFiltered","tabIndex","personal","find","length","includes","hasActiveChat","id","map","c","placeholder","list","item","prop","toLowerCase","indexOf","aria-hidden","key","contact","sendMessage","chatId","text","sendMessageToChat","setMessages","requestChatMessages","initializeChat","newMessage","setNewMessage","invitePaneVisible","setInvitePaneVisible","trySend","trim","ref","React","createRef","setTimeout","current","scroll","scrollY","innerHeight","senderId","onKeyPress","event","NOTIFICATION_TYPES","setUserProfile","WebSocket","onmessage","parsed","parse","addMessageToActiveChat","listenWsUpdates","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","createLogger","render","document","getElementById"],"mappings":"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","file":"static/js/main.c07b01f6.chunk.js","sourcesContent":["\nconst { protocol, hostname, port } = window.location;\nexport const apiEndpoint = `${protocol}//${hostname}:${port}/api`;\nexport const wsEndpoint = `wss://${hostname}:${port}`;\n\n// export const apiEndpoint = `${protocol}//${hostname}:${3202}/api`;\n// export const wsEndpoint = `ws://${hostname}:${3202}`;\nexport const USER_TOKEN_PROP = 'user_token';","import { USER_TOKEN_PROP } from '../config';\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(USER_TOKEN_PROP);\n}\n\nexport const getAuthHeader = () => {\n  const token = getAuthToken()\n\n  if (!token) return {};\n\n  return {\n    Authorization: `Bearer ${token}`\n  };\n}","import axios from 'axios';\nimport { USER_TOKEN_PROP } from '../config';\nimport { getAuthHeader } from '../helpers/auth-header'\n\nexport const USER_PROCESSING_STARTED = 'USER_PROCESSING_STARTED';\nconst startUserProcessing = () => ({ type: USER_PROCESSING_STARTED });\n\nexport const USER_PROCESSING_FINISHED = 'USER_PROCESSING_FINISHED';\nconst finishUserProcessing = () => ({ type: USER_PROCESSING_FINISHED });\n\nexport const USER_INITIALIZED = 'USER_INITIALIZED';\nexport const initializeUser = () => {\n  return ({ type: USER_INITIALIZED })\n}\n\nexport const SET_USER_TOKEN = 'SET_USER_TOKEN'\nexport const setUserToken = (token) => {\n  localStorage.setItem(USER_TOKEN_PROP, token);\n  return {\n    type: SET_USER_TOKEN,\n    token,\n  };\n}\n\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE';\nexport const setUserProfile = (user) => ({\n  type: SET_USER_PROFILE,\n  user,\n})\n\nexport const registerUser = (login, password) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startUserProcessing());\n    const requestOptions = {\n      mode: 'no-cors',\n      headers: {\n        'content-type': 'application/json'\n      },\n    };\n    return axios.post(`${apiEndpoint}/users/register`, JSON.stringify({ login, password }), requestOptions)\n    .then(res => {\n      const token = res.data;\n      dispatch(setUserToken(token));\n    })\n    .finally(() => dispatch(finishUserProcessing()))\n  };\n};\n\nexport const loginUser = (login, password) => {\n  return (dispatch, getState, apiEndpoint) => {\n    dispatch(startUserProcessing());\n    const requestOptions = {\n      mode: 'no-cors',\n      headers: {\n        'content-type': 'application/json'\n      },\n    };\n\n    return axios.post(`${apiEndpoint}/users/login`, JSON.stringify({ login, password }), requestOptions)\n      .then(res => {\n        const token = res.data;\n        window.localStorage.setItem('user_token', token);\n        dispatch(setUserToken(token));\n      })\n      .finally(() => dispatch(finishUserProcessing()))\n  };\n};\n\nexport const getUserProfile = () => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startUserProcessing());\n\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n\n    return axios.get(`${apiEndpoint}/users/profile`, requestOptions)\n      .then(res => res.data)\n      .then(user => dispatch(setUserProfile(user)))\n      .finally(() => dispatch(finishUserProcessing()))\n  };\n};","import {\n  SET_USER_TOKEN,\n  SET_USER_PROFILE,\n  USER_PROCESSING_STARTED,\n  USER_PROCESSING_FINISHED,\n  USER_INITIALIZED,\n} from '../actions/user';\nimport { USER_TOKEN_PROP } from '../config';\n\nconst DEFAULT_STATE = {\n  user: null,\n  token: localStorage.getItem(USER_TOKEN_PROP),\n  initialized: false,\n  isProcessing: false,\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case USER_PROCESSING_STARTED:\n      return {\n        ...state,\n        isProcessing: true,\n      };\n    case USER_PROCESSING_FINISHED:\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    case USER_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      }\n    case SET_USER_TOKEN:\n      const { token } = action;\n      return {\n        ...state,\n        token,\n      };\n    case SET_USER_PROFILE:\n      const { user } = action;\n      return {\n        ...state,\n        user,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport { getAuthHeader } from '../helpers/auth-header';\n\nexport const CHAT_PROCESSING_STARTED = 'CHAT_PROCESSING_STARTED';\nconst startChatProcessing = () => ({ type: CHAT_PROCESSING_STARTED });\n\nexport const CHAT_PROCESSING_FINISHED = 'CHAT_PROCESSING_FINISHED';\nconst finishChatProcessing = () => ({ type: CHAT_PROCESSING_FINISHED });\n\nexport const SET_CHAT_LIST = 'SET_CHAT_LIST';\nexport const setChatList = (chats) => ({\n  type: SET_CHAT_LIST,\n  chats,  \n});\n\nexport const CHAT_INITIALIZED = 'CHAT_INITIALIZED';\nexport const initializeChat = () => ({ type: CHAT_INITIALIZED });\n\nexport const ADD_CHAT_TO_LIST = 'ADD_CHAT_TO_LIST';\nexport const addChatToList = (chat) => ({\n  type: ADD_CHAT_TO_LIST,\n  chat,\n})\n\nexport const requestChatList = () => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/chats`, requestOptions)\n      .then(res => {\n        dispatch(setChatList(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n};\n\nexport const startChat = (participantIds, name) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: {\n        ...getAuthHeader(),\n        'content-type': 'application/json',\n      },\n    };\n\n    const payload = JSON.stringify({ participantIds, name });\n\n    return axios.post(`${apiEndpoint}/chats`, payload, requestOptions)\n      .then(res => {\n        dispatch(setActiveChat(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n}\n\nexport const inviteToChat = (chatId, participantIds) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startChatProcessing());\n    const requestOptions = {\n      headers: {\n        ...getAuthHeader(),\n        'content-type': 'application/json',\n      },\n    };\n\n    const payload = JSON.stringify({ participantIds });\n\n    return axios.post(`${apiEndpoint}/chats/${chatId}/invite`, payload, requestOptions)\n      .then(res => res.data)\n      .finally(() => dispatch(finishChatProcessing()));\n  }\n}\n\nexport const SET_ACTIVE_CHAT = 'SET_ACTIVE_CHAT';\nexport const setActiveChat = (chat) => ({\n  type: SET_ACTIVE_CHAT,\n  chat,\n})\n\nexport const ACTIVE_CHAT_INITIALIZED = 'ACTIVE_CHAT_INITIALIZED';\nexport const initializeActiveChat = () => ({ type: ACTIVE_CHAT_INITIALIZED });\n\nexport const SET_ACTIVE_CHAT_MESSAGES = 'SET_ACTIVE_CHAT_MESSAGES';\nexport const setActiveChatMessage = (messages) => ({ type: SET_ACTIVE_CHAT_MESSAGES, messages });\n\nexport const ADD_MESSAGE_TO_ACTIVE_CHAT = 'ADD_MESSAGE_TO_ACTIVE_CHAT';\nexport const addMessageToActiveChat = (message) => ({ type: ADD_MESSAGE_TO_ACTIVE_CHAT, message });\n\nexport const requestChatMessages = (chatId) => {\n  return (dispatch, _, apiEndpoint) => {\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/chats/${chatId}/messages`, requestOptions)\n      .then(res => {\n        dispatch(setActiveChatMessage(res.data));\n\n        return res.data;\n      });\n  }\n};\n\nexport const sendMessageToChat = (chatId, text) => {\n  return (dispatch, _, apiEndpoint) => {\n    const requestOptions = {\n      headers: {\n        ...getAuthHeader(),\n        'content-type': 'application/json',\n      },\n    };\n    const payload = JSON.stringify({ text });\n    return axios.post(`${apiEndpoint}/chats/${chatId}/messages`, payload, requestOptions);\n  }\n};\n","import {\n  SET_CHAT_LIST,\n  ADD_CHAT_TO_LIST,\n  CHAT_INITIALIZED,\n  SET_ACTIVE_CHAT,\n  CHAT_PROCESSING_STARTED,\n  CHAT_PROCESSING_FINISHED,\n  ACTIVE_CHAT_INITIALIZED,\n  SET_ACTIVE_CHAT_MESSAGES,\n  ADD_MESSAGE_TO_ACTIVE_CHAT,\n} from '../actions/chats'\n\nconst DEFAULT_STATE = {\n  chats: [],\n  activeChat: null,\n  initialized: false,\n  isProcessing: false,\n};\n\nconst chat = (state = DEFAULT_STATE , action) => {\n  switch (action.type) {\n    case CHAT_PROCESSING_STARTED:\n      return {\n        ...state,\n        isProcessing: true,\n      };\n    case CHAT_PROCESSING_FINISHED:\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    case CHAT_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      };\n    case ACTIVE_CHAT_INITIALIZED:\n      return {\n        ...state,\n        activeChat: {\n          ...state.activeChat,\n          initialized: true,\n        }\n      }\n    case SET_CHAT_LIST:\n      return {\n        ...state,\n        chats: action.chats,\n      }\n    case ADD_CHAT_TO_LIST:\n      const { chat } = action;\n      return {\n        ...state,\n        chats: [ ...state.activeChat.chats, chat ]\n      }\n    case SET_ACTIVE_CHAT:\n      return {\n        ...state,\n        activeChat: {\n          ...action.chat,\n          messages: [],\n          invitationList: [],\n        }\n      }\n    case SET_ACTIVE_CHAT_MESSAGES:\n      return {\n        ...state,\n        activeChat: {\n          ...state.activeChat,\n          messages: [...action.messages],\n        }\n      }\n    case ADD_MESSAGE_TO_ACTIVE_CHAT:\n      return {\n        ...state,\n        activeChat: {\n          ...state.activeChat,\n          messages: [...state.activeChat.messages, action.message],\n        }\n      }\n    default:\n      return state;\n  }\n}\n\nexport default chat;","import {\n  ADD_CONTACT_TO_LIST,\n  REMOVE_CONTACTS_FROM_LIST,\n  ADD_USER_TO_AVAILABLE,\n  CONTACTS_INITIALIZED,\n  CONTACTS_PROCESSING_FINISHED,\n  CONTACTS_PROCESSING_STARTED,\n  SET_ALL_AVAILABLE_CONTACTS,\n  SET_CONTACTS_LIST\n} from '../../src/actions/contacts';\n\nconst DEFAULT_STATE = {\n  initialized: false,\n  isProcessing: false,\n  userContacts: [],\n  availableContacts: [],\n}\n\nconst contacts = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case CONTACTS_INITIALIZED:\n      return {\n        ...state,\n        initialized: true,\n      }\n    case CONTACTS_PROCESSING_STARTED:\n      return {\n        ...state,\n        isProcessing: true,\n      }\n    case CONTACTS_PROCESSING_FINISHED:\n      return {\n        ...state,\n        isProcessing: false,\n      }\n    case ADD_CONTACT_TO_LIST:\n      return {\n        ...state,\n        userContacts: [\n          ...state.userContacts,\n          action.userId,\n        ]\n      }\n    case REMOVE_CONTACTS_FROM_LIST:\n      const userContacts = state\n        .userContacts\n        .filter(userId => userId !== action.userId);\n      return {\n        ...state,\n        userContacts,\n      }\n    case ADD_USER_TO_AVAILABLE:\n      return {\n        ...state,\n        availableContacts: [\n          ...state.availableContacts,\n          action.user,\n        ]\n      }\n    case SET_ALL_AVAILABLE_CONTACTS:\n      return {\n        ...state,\n        availableContacts: [\n          ...action.contacts,\n        ]\n      }\n    case SET_CONTACTS_LIST:\n      return {\n        ...state,\n        userContacts: [\n          ...action.userIds\n        ]\n      }\n    default:\n      return state;\n  }\n}\n\nexport default contacts;","import axios from 'axios';\nimport { getAuthHeader } from '../helpers/auth-header';\n\nexport const CONTACTS_PROCESSING_STARTED = 'CONTACTS_PROCESSING_STARTED';\nconst startContactsProcessing = () => ({ type: CONTACTS_PROCESSING_STARTED });\n\nexport const CONTACTS_PROCESSING_FINISHED = 'CONTACTS_PROCESSING_FINISHED';\nconst finishContactsProcessing = () => ({ type: CONTACTS_PROCESSING_FINISHED });\n\nexport const SET_CONTACTS_LIST = 'SET_CONTACTS_LIST';\nexport const setContactsList = (userIds) => ({\n  type: SET_CONTACTS_LIST,\n  userIds,  \n});\n\nexport const SET_ALL_AVAILABLE_CONTACTS = 'SET_CONTACTSET_ALL_AVAILABLE_CONTACTSS_LIST';\nexport const setAllContacts = (contacts) => ({\n  type: SET_ALL_AVAILABLE_CONTACTS,\n  contacts,  \n});\n\nexport const CONTACTS_INITIALIZED = 'CONTACTS_INITIALIZED';\nexport const initializeContacts = () => ({ type: CONTACTS_INITIALIZED });\n\nexport const ADD_CONTACT_TO_LIST = 'ADD_CONTACT_TO_LIST';\nexport const addContactsToList = (userId) => ({\n  type: ADD_CONTACT_TO_LIST,\n  userId,\n})\n\nexport const REMOVE_CONTACTS_FROM_LIST = 'REMOVE_CONTACTS_FROM_LIST';\nexport const removeContactsFromList = (userId) => ({\n  type: REMOVE_CONTACTS_FROM_LIST,\n  userId,\n})\n\nexport const ADD_USER_TO_AVAILABLE = 'ADD_USER_TO_AVAILABLE';\nexport const addUserToAvailable = (user) => ({\n  type: ADD_USER_TO_AVAILABLE,\n  user,\n})\n\nexport const requestUserContactList = (userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/contacts`, requestOptions)\n      .then(res => {\n        dispatch(setContactsList(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n};\n\nexport const requestAllContacts = () => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.get(`${apiEndpoint}/contacts/all`, requestOptions)\n      .then(res => {\n        dispatch(setAllContacts(res.data));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n}\n\nexport const addUserToContacts = (userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.post(`${apiEndpoint}/contacts/${userId}`, '', requestOptions)\n      .then(res => {\n        dispatch(addContactsToList(userId));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n}\n\nexport const deleteUserFromContacts = (userId) => {\n  return (dispatch, _, apiEndpoint) => {\n    dispatch(startContactsProcessing());\n    const requestOptions = {\n      headers: getAuthHeader(),\n    };\n    return axios.delete(`${apiEndpoint}/contacts/${userId}`, requestOptions)\n      .then(res => {\n        dispatch(removeContactsFromList(userId));\n\n        return res.data;\n      })\n      .finally(() => dispatch(finishContactsProcessing()));\n  }\n}","import { combineReducers } from 'redux';\nimport user from './user'\nimport chats from './chats'\nimport contacts from './contacts'\n\nexport default combineReducers({\n  user,\n  chats,\n  contacts,\n})","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './index.css'\n\nimport { loginUser, registerUser } from '../../actions/user'\n\nconst Login = ({ user, signIn, signUp }) => {\n  const [currentTab, changeTab] = useState(1);\n  const [login, changeLogin] = useState('');\n  const [password, changePassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const cleanup = () => {\n    changeLogin('');\n    changePassword('');\n  };\n  const cleanupMessages = () => {\n    setErrorMessage('')\n    setSuccessMessage('')\n  };\n  const signUpUser = () => {\n    cleanupMessages();\n    signUp(login, password)\n      .then(() => {\n        cleanup();\n        changeTab(0);\n        setSuccessMessage('User created, now you can sign in');\n      })\n      .catch(err => {\n        console.log(err.response)\n        if (err.response && err.response.status === 409) {\n          setErrorMessage('User with this name already exists')\n        } else {\n          setErrorMessage('server error');\n        }\n      })\n  };\n\n  const signInUser = () => {\n    cleanupMessages()\n    signIn(login, password)\n      .catch((err) => {\n        if (err.response && err.response.status < 500) {\n          setErrorMessage('Invalid login or password')\n        } else {\n          setErrorMessage('server error');\n        }\n      })\n  }\n  const handleInput = (fn) => (e) => fn(e.target.value);\n\n  return (<div className=\"auth-form-container\">\n    <h3>Web chat application</h3>\n\n    <form className=\"auth-form\" onSubmit={(e) => e.preventDefault()}>\n      <input type=\"text\" value={login} disabled={user.isProcessing} onChange={handleInput(changeLogin)}/>\n      <input type=\"password\" value={password} disabled={user.isProcessing} onChange={handleInput(changePassword)}/>\n      <div className=\"auth-form-success\">{successMessage}</div>\n      <div className=\"auth-form-error\">{errorMessage}</div>\n      <div className=\"auth-form-declaimer\">    \n          {\n            currentTab === 0\n              ? <p>Sign in to continue, don't have account <b onClick={changeTab.bind(null, 1)}>sign up</b></p>\n              : <p>Already registered, use your account <b onClick={changeTab.bind(null, 0)}>sign in</b></p>\n          }\n      </div>\n      {\n        currentTab === 0\n          ? <button disabled={user.isProcessing || !login || !password} onClick={signInUser}>Sign in</button>\n          : <button disabled={user.isProcessing || !login || !password} onClick={signUpUser}>Sign up</button>\n      }\n    </form>\n  </div>)\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (login, password) => dispatch(loginUser(login, password)),\n    signUp: (login, password) => dispatch(registerUser(login, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { initializeChat, setActiveChat, requestChatList, startChat } from '../../actions/chats';\nimport {\n  initializeContacts,\n  requestAllContacts,\n  requestUserContactList,\n  addUserToContacts,\n  deleteUserFromContacts,\n} from '../../actions/contacts';\nimport './index.css';\n\nconst Sidebar = ({\n  chatState,\n  contactsState,\n  userState,\n  markChatInitialized,\n  setChatList,\n  selectChat,\n  markContactsInitialized,\n  requestAvailableContacts,\n  requestContactList,\n  addToContacts,\n  deleteFromContacts,\n  inviteToChat,\n}) => {\n  const { chats: chatList } = chatState;\n  const { availableContacts, userContacts } = contactsState;\n  const [ searchValue, setSearchValue ] = useState('');\n  const [ currentTab, setTab] = useState(0);\n  const [ filtered, setFiltered ] = useState([]);\n  if (!chatState.initialized && !chatState.isProcessing) {\n    markChatInitialized();\n    setChatList();\n  }\n  if (!contactsState.initialized && !contactsState.isProcessing) {\n    markContactsInitialized();\n    requestAvailableContacts();\n    requestContactList();\n  }\n  const filterList = (e) => {\n    const list = currentTab === 0 ? chatList : availableContacts;\n    const { value } = e.target;\n    console.log(list, value)\n    setFiltered(list.filter(item => {\n      const prop = currentTab === 0 ? item.name : item.login;\n      console.log(prop, prop.toLowerCase().indexOf(value.toLowerCase()) > -1)\n      return prop.toLowerCase().indexOf(value.toLowerCase()) > -1;\n    }))\n    setSearchValue(value);\n  }\n  const changeTab = (tabIndex) => {\n    setFiltered([]);\n    setSearchValue('');\n    setTab(tabIndex);\n  };\n\n  const hasActiveChat = (userId) => {\n    const personalChat = chatList.find(chat => {\n      return chat.participantIds.length === 2\n        && chat.participantIds.includes(userId);\n    });\n\n    return personalChat;\n  };\n\n  const startChat = (userId) => {\n    const personal = hasActiveChat(userId);\n\n    if (personal) {\n      changeTab(0)\n      selectChat(personal);\n      return;\n    }\n    inviteToChat([userId, userState.user.id])\n      .then((chat) => {\n        changeTab(0)\n        selectChat(chat)\n      })\n  }\n\n  const chats = searchValue ? filtered : chatList;\n  const contacts = searchValue\n    ? filtered\n    : userContacts.map(id => availableContacts.find(c => c.id === 1));\n\n  return (<aside className={`chat-sidebar\n      ${(chatState.isProcessing || contactsState.isProcessing) ? 'disabled': ''}\n    `}>\n    <input className=\"chat-sidebar-filter\"\n      placeholder=\"Search\"\n      value={searchValue}\n      onChange={filterList} />\n    <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n    <div className=\"switches\">\n      <button onClick={() => changeTab(0)} className={`${currentTab === 0 && 'active'}` } >Chats</button>\n      <button onClick={() => changeTab(1)} className={`${currentTab === 1 && 'active'}` }>Contacts</button>\n    </div>\n    {\n      currentTab === 0\n        ? <div className=\"chat-list\">\n          {chats.map((chat) => {\n            return <div onClick={() => selectChat(chat)} className=\"chat-item\" key={chat.id}>{chat.name}</div>\n          })}\n        </div>\n        : <div className=\"chat-list\">\n          {contacts.map(contact => {\n            return <div className=\"chat-item\" key={contact.id}>\n              {contact.login}\n              { \n                searchValue\n                  ? userContacts.includes(contact.id)\n                    ? (<span>\n                        <button onClick={() => startChat(contact.id)}>chat</button>\n                        <button onClick={() => deleteFromContacts(contact.id)}>Remove</button>\n                      </span>)\n                    : <button onClick={() => addToContacts(contact.id)}>Add</button>\n                  : (<span>\n                      <button onClick={() => startChat(contact.id)}>chat</button>\n                      <button onClick={() => deleteFromContacts(contact.id)}>Remove</button>\n                    </span>)\n                \n              }\n            </div>\n          })}\n        </div>\n    }\n    \n  </aside>)\n};\n\nconst mapStateToProps = (state) => ({\n  chatState: state.chats,\n  contactsState: state.contacts,\n  userState: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    markChatInitialized: () => dispatch(initializeChat()),\n    setChatList: () => dispatch(requestChatList()),\n    selectChat: (chat) => dispatch(setActiveChat(chat)),\n    inviteToChat: (participantIds, name) => dispatch(startChat(participantIds, name)),\n    markContactsInitialized: () => dispatch(initializeContacts()),\n    requestAvailableContacts: () => dispatch(requestAllContacts()),\n    requestContactList: () => dispatch(requestUserContactList()),\n    addToContacts: (userId) => dispatch(addUserToContacts(userId)),\n    deleteFromContacts: (userId) => dispatch(deleteUserFromContacts(userId)),\n  }\n}; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  sendMessageToChat,\n  requestChatMessages,\n  initializeActiveChat,\n} from '../../actions/chats';\nimport './index.css';\n\nconst Chat = ({\n  chatState,\n  userState,\n  contactsState,\n  sendMessage,\n  setMessages,\n  initializeChat,\n}) => {\n  const { activeChat } = chatState;\n\n  if (activeChat && !activeChat.initialized) {\n    initializeChat()\n    setMessages(activeChat.id)\n  };\n\n  const [newMessage, setNewMessage] = useState('');\n  const [invitePaneVisible, setInvitePaneVisible] = useState(false);\n\n  const handleChange = fn => e => fn(e.target.value);\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") trySend();\n  }\n\n  const trySend = () => {\n    if (activeChat && newMessage.trim()) {\n      sendMessage(activeChat.id, newMessage)\n        .then(() => setNewMessage(''));\n    }\n  };\n\n  const ref = React.createRef();\n  setTimeout(() => {\n    if (ref.current) {\n      ref.current.scroll(0, window.scrollY + window.innerHeight);\n    }\n  }, 25);\n\n  return (<main className=\"active-chat\">\n    <div className=\"active-chat-header\">\n      <h3 className=\"name\">{activeChat && activeChat.name}</h3>\n      {\n        activeChat && <div className=\"pane\">\n          <i onClick={() => setInvitePaneVisible(true)} className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          {\n            invitePaneVisible && <div className={`pane-list ${invitePaneVisible ? 'active' : ''}`}>\n              {\n                contactsState.availableContacts.map(user => {\n                  return <div>{user.login}</div>\n                })\n              }\n            </div>\n          }\n        </div>\n      }\n    </div>\n    <div className=\"active-chat-messages\" ref={ref}>\n      {activeChat \n        && activeChat.messages\n        && activeChat.messages.map(message => {\n          return <div key={message.id}\n            className={`message\n              ${message.senderId === userState.user.id ? 'righty' : 'lefty'}`}>\n            <div className=\"bubble\">{message.text}</div>\n          </div>\n        })}\n    </div>\n    <input className=\"send-message-input\" value={newMessage}\n      onChange={handleChange(setNewMessage)}\n      onKeyPress={handleKeyPress}/>\n    <i onClick={trySend} className=\"fa fa-paper-plane-o send-message-button\" aria-hidden=\"true\"></i>\n  </main>)\n};\n\nconst mapStateToProps = state => ({\n  chatState: state.chats,\n  userState: state.user,\n  contactsState: state.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendMessage: (chatId, text) => dispatch(sendMessageToChat(chatId, text)),\n  setMessages: (chatId) => dispatch(requestChatMessages(chatId)),\n  initializeChat: () => dispatch(initializeActiveChat())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './index.css';\nimport { setUserToken } from '../../actions/user';\n\nconst Header = ({ dispatch, userState }) => {\n  const logOut = () => dispatch(setUserToken(''));\n  const { user } = userState;\n  return (<header className=\"user-status-header\">\n    <i className=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\n    {user && user.login}\n    <i className=\"fa fa-sign-out\" aria-hidden=\"true\" onClick={logOut}></i>\n  </header>)\n};\n\nconst mapStateToProps = state => ({\n  userState: state.user,\n})\n\nexport default connect(mapStateToProps)(Header);","import { wsEndpoint } from '../config';\nimport { addMessageToActiveChat } from '../actions/chats';\nimport { addUserToAvailable } from '../actions/contacts';\nimport { getAuthToken } from './auth-header';\n\nconst NOTIFICATION_TYPES = {\n  MESSAGE_CREATED: 'MESSAGE_CREATED',\n  CHAT_CREATED: 'CHAT_CREATED',\n  USER_CREATED: 'USER_CREATED',\n};\nexport const listenWsUpdates = (dispatch) => {\n  try {\n    const ws = new WebSocket(`${wsEndpoint}?token=${getAuthToken()}`);\n    ws.onmessage = (message) => {\n      const parsed = JSON.parse(message.data)\n      switch (parsed.type) {\n        case NOTIFICATION_TYPES.MESSAGE_CREATED:\n          return dispatch(addMessageToActiveChat(parsed.data));\n        case NOTIFICATION_TYPES.USER_CREATED:\n          return dispatch(addUserToAvailable(parsed.data));\n        default:\n          return;\n      }\n    };\n  } catch (err) {\n    console.log('failed to connect over ws');\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport './App.css'; \nimport Login from './components/login';\nimport Sidebar from './components/sidebar';\nimport Chat from './components/chat';\nimport Header from './components/header';\nimport { listenWsUpdates } from './helpers/ws-listener'\nimport { getUserProfile, initializeUser } from './actions/user'\n\nconst App =  ({ dispatch, user }) => {\n  const loggedIn = !!user.token;\n  if (!loggedIn) {\n    return (<Login/>);\n  }\n\n  if (!user.initialized && !user.isProcessing) {\n    dispatch(initializeUser())\n    dispatch(getUserProfile()).catch(err => {})\n    listenWsUpdates(dispatch);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"component-container\">\n        <Sidebar/>\n        <Chat/>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  const { user } = state;\n\n  return { user };\n}\n\nexport default connect(mapStateToProps)(App)","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport thunk from 'redux-thunk'\nimport App from './App'\nimport { apiEndpoint } from './config'\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunk.withExtraArgument(apiEndpoint),\n    createLogger()\n  )\n)\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}